import { useMemo } from "react";
import { ProductCardSkeleton } from "./ProductCardSkeleton";

/**
 * @typedef {Object} Price
 * @property {number} amount
 * @property {string} currency
 */

/**
 * @typedef {Object} Product
 * @property {string} id
 * @property {string} title
 * @property {string} image
 * @property {Price} price
 * @property {string=} href
 */

/**
 * @param {{ product?: Product, isLoading?: boolean }} props
 */
export default function ProductCard({ product, isLoading = false }) {
  if (isLoading || !product) return <ProductCardSkeleton />;

  const formatted = useMemo(() => {
    const amt = Number(product.price?.amount ?? 0);
    const cur = product.price?.currency ?? "USD";
    try {
      return new Intl.NumberFormat(undefined, { style: "currency", currency: cur }).format(amt);
    } catch {
      return `$${amt.toFixed(2)}`;
    }
  }, [product]);

  return (
    <a className="block group" href={product.href ?? `#/product/${product.id}`}>
      <div className="aspect-square overflow-hidden bg-neutral-100">
        <img
          src={product.image}
          alt={product.title}
          loading="lazy"
          className="h-full w-full object-cover transition-transform group-hover:scale-105"
        />
      </div>
      <div className="mt-3">
        <h3 className="text-sm font-medium">{product.title}</h3>
        <p className="text-sm opacity-70">{formatted}</p>
      </div>
    </a>
  );
}